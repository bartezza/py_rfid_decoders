
from typing import List
from rfid_decoders.modified_miller import decode_modified_miller
from rfid_decoders.framing import decode_framing
from rfid_decoders.decoder_utils import bitstream_to_bytes, dump_hex_array,\
    split_bitstream


def test_modified_miller():
    # bits = "111111111111110000000000111111111111111111111100000000001111111111"\
    #        "111111111111111111111111111100000000001111111111111111111111000000"\
    #        "000011111111111111111111111111111111111111000000000011111111111111"\
    #        "111111111111111111111111000000000011111111111111111111111111111111"\
    #        "111111000000000011111111111111111111111111111111111111111111111111"\
    #        "1111111111111111111111"

    bits = \
        "0000000000000000000011111111111111111111111111111111111111000000000"\
        "0111111111111111111111100000000001111111111111111111111111111111111"\
        "1111000000000011111111111111111111111111111111111111000000000011111"\
        "1111111111111111111111111111111110000000000111111111111111111111111"\
        "1111111111111100000000001111111111111111111111000000000011111111111"\
        "1111111111111111111111111110000000000111111111111111111111100000000"\
        "0011111111111111111111110000000000111111111111111111111100000000001"\
        "1111111111111111111111111111111111111000000000011111111111111111111"\
        "1111111111111111110000000000111111111111111111111100000000001111111"\
        "1111111111111110000000000111111111111111111111111111111111111111111"\
        "1111111111111111111111111111111111"

    out_bits = decode_manchester(bits, verbose=True)

    print(split_bitstream(out_bits, 8))

    bytes = decode_framing(out_bits)

    # bytes = bitstream_to_bytes(out_bits)
    ret = dump_hex_array(bytes)

    print(ret)

    # assert ret == "93 20"


if __name__ == "__main__":
    test_modified_miller()
